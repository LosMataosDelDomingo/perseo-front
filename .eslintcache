[{"D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\index.js":"1","D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\App.js":"2","D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\reportWebVitals.js":"3","D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\components\\signup\\Signup.js":"4","D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\services\\user-service.js":"5","D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\components\\Header\\index.jsx":"6","D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\components\\common\\Button\\index.jsx":"7","D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\components\\Access\\index.jsx":"8","D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\components\\Access\\Register\\index.jsx":"9","D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\components\\Access\\Login\\index.jsx":"10","D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\components\\Profile\\index.jsx":"11","D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\components\\common\\Card\\index.jsx":"12"},{"size":541,"mtime":1611495239275,"results":"13","hashOfConfig":"14"},{"size":685,"mtime":1611500890678,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1611489636399,"results":"16","hashOfConfig":"14"},{"size":3667,"mtime":1611495239274,"results":"17","hashOfConfig":"14"},{"size":963,"mtime":1611489738591,"results":"18","hashOfConfig":"14"},{"size":810,"mtime":1611496964675,"results":"19","hashOfConfig":"14"},{"size":272,"mtime":1611500666902,"results":"20","hashOfConfig":"14"},{"size":1505,"mtime":1611501002941,"results":"21","hashOfConfig":"14"},{"size":8096,"mtime":1611496937878,"results":"22","hashOfConfig":"14"},{"size":3635,"mtime":1611497003217,"results":"23","hashOfConfig":"14"},{"size":2657,"mtime":1611505475751,"results":"24","hashOfConfig":"14"},{"size":669,"mtime":1611500956304,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"19ws8o3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\index.js",[],["55","56"],"D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\App.js",["57"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Header } from \"./components/Header\"\r\nimport { Access } from \"./components/Access\"\r\nimport Signup from './components/signup/Signup'\r\nimport {Profile} from \"components/Profile\"\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/1\" component={Signup} />\r\n          <Route path=\"/2\" component={Access} />\r\n          <Route path=\"/\" component={Profile} />\r\n        </Switch>\r\n        {/* <Signup /> */}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\reportWebVitals.js",[],"D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\components\\signup\\Signup.js",["58","59"],"import React, { useState } from 'react'\r\nimport UserService from '../../services/user-service'\r\n\r\nconst Signup = () => {\r\n\r\n    const[name, setName] = useState('')\r\n    const[surname, setSurname] = useState('')\r\n    const[email, setEmail] = useState('')\r\n    const[password, setPassword] = useState('')\r\n    const[phone, setPhone] = useState('')\r\n    const[birthAge, setBirthAge] = useState('')\r\n    const[adress, setAdress] = useState('')\r\n    const[summary, setSummary] = useState('')\r\n    const[message, setMessage] = useState('')\r\n\r\n    const onChangeName = (e) => {\r\n        const name = e.target.value\r\n        setName(name)\r\n    }\r\n    const onChangeSurname = (e) => {\r\n        const surname = e.target.value\r\n        setSurname(surname)\r\n    }\r\n    const onChangeEmail = (e) => {\r\n        const email = e.target.value\r\n        setEmail(email)\r\n    }\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value\r\n        setPassword(password)\r\n    }\r\n    const onChangePhone = (e) => {\r\n        const phone = e.target.value\r\n        setPhone(phone)\r\n    }\r\n    const onChangeBirth = (e) => {\r\n        const birthAge = e.target.value\r\n        setBirthAge(birthAge)\r\n    }\r\n    const onChangeAdress = (e) => {\r\n        const adress = e.target.value\r\n        setAdress(adress)\r\n    }\r\n    const onChangeSummary = (e) => {\r\n        const summary = e.target.value\r\n        setSummary(summary)\r\n    }\r\n\r\n    const handleSignUp = (e) => {\r\n        e.preventDefault()\r\n        setMessage('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form action={handleSignUp}>\r\n                <input \r\n                    type=\"text\" \r\n                    name='name' \r\n                    value={name} \r\n                    onChange={e => onChangeName(e)} \r\n                    placeholder=\"Name\"\r\n                />\r\n                <input \r\n                    type=\"text\" \r\n                    name='surname' \r\n                    value={surname} \r\n                    onChange={e => onChangeSurname(e)} \r\n                placeholder=\"Surname\"\r\n                />\r\n                <input \r\n                    type=\"text\" \r\n                    name='email' \r\n                    value={email} \r\n                    onChange={e => onChangeEmail(e)} \r\n                placeholder=\"email\"\r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    name='password' \r\n                    value={password} \r\n                    onChange={e => onChangePassword(e)} \r\n                    placeholder=\"your password\"\r\n                />\r\n                <input \r\n                    type=\"text\" \r\n                    name='phone' \r\n                    value={phone} \r\n                    onChange={e => onChangePhone(e)} \r\n                    placeholder=\"phone\"\r\n                />\r\n                <input \r\n                    type=\"text\" \r\n                    name='birthage' \r\n                    value={birthAge} \r\n                    onChange={e => onChangeBirth(e)} \r\n                    placeholder=\"birthage\"\r\n                />\r\n                <input \r\n                    type=\"text\" \r\n                    name='adress' \r\n                    value={adress} \r\n                    onChange={e => onChangeAdress(e)} \r\n                    placeholder=\"adress\"\r\n                />\r\n                <input \r\n                    type=\"text\" \r\n                    name='summary' \r\n                    value={summary} \r\n                    onChange={e => onChangeSummary(e)} \r\n                    placeholder=\"summary\"\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup","D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\services\\user-service.js",[],"D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\components\\Header\\index.jsx",[],"D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\components\\common\\Button\\index.jsx",[],"D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\components\\Access\\index.jsx",["60","61"],"D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\components\\Access\\Register\\index.jsx",["62","63","64","65","66","67","68","69","70","71"],"import React, { useState } from 'react'\r\n// import UserService from '../../services/user-service'\r\n\r\nimport Container from '@material-ui/core/Container'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Box from '@material-ui/core/Box'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Link from '@material-ui/core/Link'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    }\r\n}))\r\n\r\n\r\n\r\nconst Signup = () => {\r\n\r\n    const[name, setName] = useState('')\r\n    const[surname, setSurname] = useState('')\r\n    const[email, setEmail] = useState('')\r\n    const[password, setPassword] = useState('')\r\n    const[phone, setPhone] = useState('')\r\n    const[birthAge, setBirthAge] = useState('')\r\n    const[adress, setAdress] = useState('')\r\n    const[summary, setSummary] = useState('')\r\n    const[message, setMessage] = useState('')\r\n\r\n    const onChangeName = (e) => {\r\n        const name = e.target.value\r\n        setName(name)\r\n    }\r\n    const onChangeSurname = (e) => {\r\n        const surname = e.target.value\r\n        setSurname(surname)\r\n    }\r\n    const onChangeEmail = (e) => {\r\n        const email = e.target.value\r\n        setEmail(email)\r\n    }\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value\r\n        setPassword(password)\r\n    }\r\n    const onChangePhone = (e) => {\r\n        const phone = e.target.value\r\n        setPhone(phone)\r\n    }\r\n    const onChangeBirth = (e) => {\r\n        const birthAge = e.target.value\r\n        setBirthAge(birthAge)\r\n    }\r\n    const onChangeAdress = (e) => {\r\n        const adress = e.target.value\r\n        setAdress(adress)\r\n    }\r\n    const onChangeSummary = (e) => {\r\n        const summary = e.target.value\r\n        setSummary(summary)\r\n    }\r\n\r\n    const handleSignUp = (e) => {\r\n        e.preventDefault()\r\n        setMessage('')\r\n    }\r\n\r\nconst classes = useStyles()\r\n\r\n    return (\r\n        <Container component='main' maxWidth='xs'>\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}/>\r\n                <Typography component='h1' variant='h5'>\r\n                    Sign Up\r\n                </Typography>\r\n                <form className={classes.form} action={handleSignUp}>\r\n\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                        type=\"text\" \r\n                        name='name'\r\n                        value={name} \r\n                        onChange={e => onChangeName(e)} \r\n                        placeholder=\"Name\"\r\n                        variant=\"outlined\"\r\n                        autoComplete='fname'\r\n                        required\r\n                        label=\"name\"\r\n                        id=\"name\"\r\n                        fullWidth\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                type=\"text\" \r\n                                name='surname' \r\n                                value={surname} \r\n                                onChange={e => onChangeSurname(e)} \r\n                                variant=\"outlined\"\r\n                                required\r\n                                label=\"surname\"\r\n                                id=\"surname\"\r\n                                fullWidth\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                        type=\"text\" \r\n                        name='email' \r\n                        value={email} \r\n                        onChange={e => onChangeEmail(e)} \r\n                        placeholder=\"email\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        label=\"email\"\r\n                        id=\"email\"\r\n                        fullWidth\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                        type=\"password\" \r\n                        name='password' \r\n                        value={password} \r\n                        onChange={e => onChangePassword(e)} \r\n                        placeholder=\"your password\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        label=\"password\"\r\n                        id=\"password\"\r\n                        fullWidth\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                        type=\"text\" \r\n                        name='phone' \r\n                        value={phone} \r\n                        onChange={e => onChangePhone(e)} \r\n                        placeholder=\"phone\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        label=\"phone\"\r\n                        id=\"phone\"\r\n                        fullWidth\r\n                            />\r\n                        </Grid>\r\n                        {/* <Grid item xs={12}>\r\n                            <TextField\r\n                        type=\"text\" \r\n                        name='birthage' \r\n                        value={birthAge} \r\n                        onChange={e => onChangeBirth(e)} \r\n                        placeholder=\"birthage\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        label=\"birthage\"\r\n                        id=\"birthage\"\r\n                        fullWidth\r\n                            />\r\n                        </Grid> */}\r\n                        {/* <Grid item xs={12}>\r\n                            <TextField\r\n                        type=\"text\" \r\n                        name='adress' \r\n                        value={adress} \r\n                        onChange={e => onChangeAdress(e)} \r\n                        placeholder=\"adress\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        label=\"adress\"\r\n                        id=\"adress\"\r\n                        fullWidth\r\n                            />\r\n                        </Grid> */}\r\n                        {/* <Grid item xs={12}>\r\n                            <TextField\r\n                        type=\"text\" \r\n                        name='summary' \r\n                        value={summary} \r\n                        onChange={e => onChangeSummary(e)} \r\n                        placeholder=\"summary\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        label=\"summary\"\r\n                        id=\"summary\"\r\n                        fullWidth\r\n                            />\r\n                        </Grid> */}\r\n                    </Grid>\r\n                    <Button\r\n                    type='submit'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    color='primary'\r\n                    className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Signup","D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\components\\Access\\Login\\index.jsx",["72"],"import React, { useState } from 'react'\r\n\r\nimport Container from '@material-ui/core/Container'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    }\r\n}))\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const onChangeEmail = (e) => {\r\n        const email = e.target.value\r\n        setEmail(email)\r\n    }\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value\r\n        setPassword(password)\r\n    }\r\n\r\n    const handleSignUp = (e) => {\r\n        e.preventDefault()\r\n        setMessage('')\r\n    }\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Container component='main' maxWidth='xs'>\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar} />\r\n                <Typography component='h1' variant='h5'>\r\n                    Log In\r\n                </Typography>\r\n                <form className={classes.form} action={handleSignUp}>\r\n\r\n                    <Grid container spacing={2}>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                type=\"text\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={e => onChangeEmail(e)}\r\n                                placeholder=\"email\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                label=\"email\"\r\n                                id=\"email\"\r\n                                fullWidth\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                type=\"password\"\r\n                                name='password'\r\n                                value={password}\r\n                                onChange={e => onChangePassword(e)}\r\n                                placeholder=\"your password\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                label=\"password\"\r\n                                id=\"password\"\r\n                                fullWidth\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type='submit'\r\n                        fullWidth\r\n                        variant='contained'\r\n                        color='primary'\r\n                        className={classes.submit}\r\n                    >\r\n                        Log In\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login","D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\components\\Profile\\index.jsx",[],"D:\\Proyectos\\Node\\nuwe_ind\\perseo-front\\src\\components\\common\\Card\\index.jsx",["73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":12},{"ruleId":"78","severity":1,"message":"82","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":19},{"ruleId":"78","severity":1,"message":"83","line":14,"column":11,"nodeType":"80","messageId":"81","endLine":14,"endColumn":18},{"ruleId":"78","severity":1,"message":"84","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":13},{"ruleId":"78","severity":1,"message":"85","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":16},{"ruleId":"78","severity":1,"message":"86","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":24},{"ruleId":"78","severity":1,"message":"87","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":11},{"ruleId":"78","severity":1,"message":"88","line":9,"column":8,"nodeType":"80","messageId":"81","endLine":9,"endColumn":12},{"ruleId":"78","severity":1,"message":"89","line":48,"column":11,"nodeType":"80","messageId":"81","endLine":48,"endColumn":19},{"ruleId":"78","severity":1,"message":"90","line":49,"column":11,"nodeType":"80","messageId":"81","endLine":49,"endColumn":17},{"ruleId":"78","severity":1,"message":"91","line":50,"column":11,"nodeType":"80","messageId":"81","endLine":50,"endColumn":18},{"ruleId":"78","severity":1,"message":"83","line":51,"column":11,"nodeType":"80","messageId":"81","endLine":51,"endColumn":18},{"ruleId":"78","severity":1,"message":"92","line":73,"column":11,"nodeType":"80","messageId":"81","endLine":73,"endColumn":24},{"ruleId":"78","severity":1,"message":"93","line":77,"column":11,"nodeType":"80","messageId":"81","endLine":77,"endColumn":25},{"ruleId":"78","severity":1,"message":"94","line":81,"column":11,"nodeType":"80","messageId":"81","endLine":81,"endColumn":26},{"ruleId":"78","severity":1,"message":"83","line":42,"column":12,"nodeType":"80","messageId":"81","endLine":42,"endColumn":19},{"ruleId":"95","severity":1,"message":"96","line":15,"column":21,"nodeType":"97","endLine":15,"endColumn":33},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'UserService' is defined but never used.","'message' is assigned a value but never used.","'Login' is defined but never used.","'Register' is defined but never used.","'FormControlLabel' is defined but never used.","'Box' is defined but never used.","'Link' is defined but never used.","'birthAge' is assigned a value but never used.","'adress' is assigned a value but never used.","'summary' is assigned a value but never used.","'onChangeBirth' is assigned a value but never used.","'onChangeAdress' is assigned a value but never used.","'onChangeSummary' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]